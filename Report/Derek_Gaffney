Contributions

	Amazon Web Services:
		Provisioned AWS Account and configured the following services for our project:
			-AWS VPC (Virtual Private Cloud) network to host our EC2 and RDS instances
			-AWS RDS (Relational Database Service) to host a MySQL Database in the cloud
			-AWS EC2 (Elastic Compute Cloud) instance to host our web server
				-Installed & Configured Python and Node Environments for our web server
				-Wrote automatic start, update, and shutdown scripts for our web app services
			-AWS S3 (Simple Storage Service) to store our ticket pdfs
			
	Artifacts:
		Project Specification Document
			-Wrote the document with input from the Team
		Initial Design Document
			-Wrote the Database Specification section of the inital version of the Design Document
		Final Design Document
			-Updated the format of the final version of the Design Document
			-Updated the Database Design section of the final version of the Design Document
			-Updated the Backend Design section of the final version of the Design Document
		Issues
			-Compiled the resolved and unresolved files for our final submission along with Curtis Baillie
		Demo Video
			-Wrote the script for the demo video
			-Shot & narrated the demo video
		Presentation
			-Outlined the presentation
			-Wrote the mobile screenshots and pdf interface sections of the presentation
	
	Database Schema:
		Designed the database model for our project along with input from Anthony Orio & the Team
			-Built schema in MySQL Workbench
			-Modified database model when neccessary during project (many times)
			-Assumed responsibility for helping team members with keeping their databases up to date with the latest model
				-Running scripts to update data and fix inconsistencies
			-Wrote procedures for creating stadium seating infrastructure data (sections, rows, and seats for their respective tables)
			
	Development:
		-Designed and implemented the home page (lander page)
		-Implemented redesigned nav bar
			-Changed color scheme, made thicker, wrapped in headroom component (disapears during scrolldown)
		-Implemented global styles for pages, background images for nicer website appeal
		-Implemented S3 and PDF interfaces
			-Uploading PDF from front end
			-Splitting it in Python using PyPDF
			-Uploading pieces to S3 bucket
			-Downloading pieces from S3 bucket
			-Rebundleing with PyPDF
			-Emailing combined ticket pdf on transaction completion
		-Changed chart coloring
			-Sixers red on select with white font
		-Styled ticket details pane
			-Sixers colors
		-Login to buy button on ticket modal if user not logged in
		-Created validation methods for checking valid ticket information on create ticket listing page
			-Checks location and currently listed tickets
		-Fixed bugs before submission
			-Ticket modal ticket number ordering
			-Time display bug on create-listing-confirm-modal
			-Fixed checkout page css
			-Fixed logout bug
			-Fixed sold status not staying bug
		-Refactored ticket filtering on pick tickets page
			-Fixed cheapest and most expensive ticket queries
			-Updated ticket queries so that every query applied the current filters
			-Styled filter panel better
			-Added search and apply buttons yielding two ways to search
				-Search performs a new search for all sections that meet the current filter criteria
				-Apply applies the current filter to the currently selected sections
		
	Test Data:
		Wrote a C# GUI for creating ticket data for our database
		(https://github.com/gaffneyd4/TTTDataGenerator)
			-Utilized it to populate the database with plenty of realistic ticket data
			